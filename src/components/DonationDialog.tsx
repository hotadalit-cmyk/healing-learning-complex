import { useState } from 'react';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

interface DonationDialogProps {
  children: React.ReactNode;
}

const donationOptions = [
  { amount: 100, label: '100 ‚ÇΩ', description: '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!' },
  { amount: 300, label: '300 ‚ÇΩ', description: '–ü–æ–º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≥–ª–∞–≤—É', popular: true },
  { amount: 500, label: '500 ‚ÇΩ', description: '–ü–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏' },
  { amount: 1000, label: '1000 ‚ÇΩ', description: '–£—Å–∫–æ—Ä–∏—Ç –≤—ã–ø—É—Å–∫ –∫–Ω–∏–≥–∏' },
];

export default function DonationDialog({ children }: DonationDialogProps) {
  const [open, setOpen] = useState(false);
  const [selectedAmount, setSelectedAmount] = useState<number | null>(null);
  const [customAmount, setCustomAmount] = useState('');

  const handleDonate = () => {
    const amount = selectedAmount || parseInt(customAmount);
    if (amount) {
      alert(`–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –°—É–º–º–∞: ${amount} ‚ÇΩ\n\n–§—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.`);
      setOpen(false);
    }
  };

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogTrigger asChild>
        {children}
      </DialogTrigger>
      <DialogContent className="sm:max-w-[600px]">
        <DialogHeader>
          <DialogTitle className="text-2xl font-heading text-transparent bg-clip-text bg-gradient-to-r from-cyber-pink to-cyber-purple">
            –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∫–Ω–∏–≥–∏
          </DialogTitle>
          <DialogDescription>
            –í–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –∫–Ω–∏–≥–æ–π –∏ –≤—ã–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é
          </DialogDescription>
        </DialogHeader>
        
        <div className="space-y-6">
          <div className="bg-muted/50 p-4 rounded-lg border border-cyber-blue/30">
            <div className="flex items-start gap-3">
              <Icon name="BookHeart" className="text-cyber-pink mt-1" size={24} />
              <div>
                <h3 className="font-semibold mb-2">–ó–∞—á–µ–º –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞?</h3>
                <ul className="text-sm text-muted-foreground space-y-1">
                  <li>‚ú® –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≤—Å–µ—Ö –≥–ª–∞–≤</li>
                  <li>üé® –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π</li>
                  <li>üìö –†–µ–¥–∞–∫—Ç—É—Ä–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç—É—Ä–∞ —Ç–µ–∫—Å—Ç–∞</li>
                  <li>üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –∏ –ø–µ—á–∞—Ç–Ω–æ–º –≤–∏–¥–µ</li>
                </ul>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-2 gap-3">
            {donationOptions.map((option) => (
              <Card
                key={option.amount}
                className={`p-4 cursor-pointer transition-all hover:scale-105 ${
                  selectedAmount === option.amount
                    ? 'border-cyber-pink bg-cyber-pink/10'
                    : 'hover:border-cyber-blue/50'
                } ${option.popular ? 'ring-2 ring-cyber-purple' : ''}`}
                onClick={() => {
                  setSelectedAmount(option.amount);
                  setCustomAmount('');
                }}
              >
                {option.popular && (
                  <Badge className="mb-2 bg-cyber-purple/20 text-cyber-purple border-cyber-purple/50">
                    –ü–æ–ø—É–ª—è—Ä–Ω–æ
                  </Badge>
                )}
                <div className="text-2xl font-bold text-cyber-pink mb-1">
                  {option.label}
                </div>
                <div className="text-xs text-muted-foreground">
                  {option.description}
                </div>
              </Card>
            ))}
          </div>

          <div className="space-y-2">
            <label className="text-sm font-medium">–°–≤–æ—è —Å—É–º–º–∞</label>
            <div className="flex gap-2">
              <input
                type="number"
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
                className="flex-1 px-3 py-2 rounded-md border border-input bg-background"
                value={customAmount}
                onChange={(e) => {
                  setCustomAmount(e.target.value);
                  setSelectedAmount(null);
                }}
                min="1"
              />
              <span className="flex items-center text-muted-foreground">‚ÇΩ</span>
            </div>
          </div>

          <div className="flex gap-3">
            <Button
              onClick={handleDonate}
              disabled={!selectedAmount && !customAmount}
              className="flex-1 bg-gradient-to-r from-cyber-pink to-cyber-purple hover:opacity-90"
            >
              <Icon name="Heart" className="mr-2" size={16} />
              –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å
            </Button>
            <Button
              variant="outline"
              onClick={() => setOpen(false)}
            >
              –ü–æ–∑–∂–µ
            </Button>
          </div>

          <p className="text-xs text-center text-muted-foreground">
            –í—Å–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–¥—É—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∫–Ω–∏–≥–∏
          </p>
        </div>
      </DialogContent>
    </Dialog>
  );
}
